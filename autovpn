#!/bin/bash

ssh_options="-o StrictHostKeyChecking=no -o NumberOfPasswordPrompts=1 -o ConnectTimeout=30 -t -t "
user='ubuntu'
get_script="wget http://git.io/vWVpZ --no-check-certificate -O openvpn-autoinstall.sh"
run_script="sudo bash ./openvpn-autoinstall.sh"
remote_path="\$HOME/aws_vpn.ovpn"

gray='\033[0m'
green='\033[00;32m'
red='\033[01;31m'
white='\033[01;37m'
yellow='\033[00;33m'


function usage {
  # ---------------------------------------------------------------------------
	echo -e "${white}DESCRIPTION:\n $gray        $(basename $0) - AWS OpenVPN Deployment Tool.\n\t Project found at https://github.com/ttlequals0/autovpn"
  echo -e "${white}USAGE:\n $gray ACTION\t [OPTIONS] 
  $white-C$gray\t Create VPN endpoint.
  $white-h$gray\t Displays this message.
  $white-i$gray\t AWS Instance type (Optional, Default is t2.micro)\n\t t2.nano t2.micro t2.small t2.medium t2.large *
  $white-k$gray\t Specify the name of AWS keypair (Required) **
  $white-r$gray\t Specify AWS Region (Required)\n\t us-east-1 us-west-1 us-west-2 eu-west-1 eu-central-1\n\t \
ap-southeast-1 ap-northeast-1 ap-northeast-2 sa-east-1\n\t ap-southeast-2"
  echo -e "${white}NOTES:\n $gray* - In reality any instance size can be given but the t2.micro\n is more than enough.\n ** - If you choose to deploy an endpoint in a different region\n make sure\
 you have a keypair setup in that region"
}


bail ()
{
	echo -e "${red}code $1"
  usage
	exit 
}

if ( ! getopts "Ck:hr:i:" opt); then
	usage;
	exit 1;
fi

while getopts ":Ck:hr:i:" opt; do
  case $opt in
    C)
      Cflag="defined"
      ;;    
    h)
      usage && exit 0
      ;; 
    i)
      iflag="defined"
      instance_type="$OPTARG"
      ;;       	
    k)
      kflag="defined"
      keyname="$OPTARG"
      ;;
    r)
      rflag="defined"
      if [ "$OPTARG" == "us-east-1" ] 
        then
        region="us-east-1"
        ami="ami-d05e75b8"
      elif [ "$OPTARG" == "us-west-1" ]
        then        
        region="us-west-1"
        ami="ami-06116566"
      elif [ "$OPTARG" == "us-west-2" ]
        then       
        region="us-west-2"
        ami="ami-9abea4fb"
      elif [ "$OPTARG" == "eu-west-1" ]
        then       
        region="eu-west-1"
        ami="ami-f95ef58a"
      elif [ "$OPTARG" == "eu-central-1" ]
        then
        region="eu-central-1"
        ami="ami-87564feb"  
      elif [ "$OPTARG" == "ap-northeast-1" ]
        then
        region="ap-northeast-1"
        ami="ami-a21529cc"
      elif [ "$OPTARG" == "ap-northeast-2" ]
        then
        region="ap-northeast-2"
        ami="ami-09dc1267"
      elif [ "$OPTARG" == "ap-southeast-1" ]
        then
        region="ap-southeast-1"
        ami="ami-25c00c46"
      elif [ "$OPTARG" == "ap-southeast-2" ]
        then
        region="ap-southeast-2"
        ami="ami-6c14310f" 
      elif [ "$OPTARG" == "sa-east-1" ]
        then
        region="sa-east-1"
        ami="ami-0fb83963"
      else 
        echo "Not a valid region" || bail 3   
      fi                                               
      ;;      
    \?)
      echo "Invalid option: -$OPTARG" >&2
      bail 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2 
      bail 2      
  esac
done

if [[ -z "$instance_type" ]]; then
	instance_type="t2.micro"
fi

local_path="$(pwd)/${region}_aws_vpn.ovpn"


if [ -n "$Cflag" ] && [ -n "$rflag" ] && [ -n "$kflag"  ]; then
  echo "Creating ec2 instance in $region. This can take some time..."
  instance_ip=$(python create_ec2.py "$keyname" "$instance_type" "$region" "$ami")
  [[ $instance_ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]] || bail 4
  echo -e "${green}Instance has been created $instance_ip"
  echo -e "${yellow}Giving new instance some time to fully boot up..."
  while [ "$status" != "0" ] 
    do 
	   echo -e "${yellow}$instance_ip is still booting..."
	   sleep 15
	   ssh-keyscan $instance_ip 2>&1 | grep -v "^$" > /dev/null
	   status=$?
  done

  echo -e "${white}Setting up VPN on $instance_ip"
  ssh $ssh_options "$user"@$instance_ip "$get_script && $run_script" || bail 5
  scp $user@$instance_ip:"$remote_path" "$local_path" || bail 6
  echo -e "${green}OpenVPN config file is located at $(pwd)"
else
  echo "-r and -k are required"; bail 7
fi 


